// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#ifndef PROTOBUF_INCLUDED_Message_2eproto
#define PROTOBUF_INCLUDED_Message_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Address.pb.h"
#include "Block.pb.h"
#include "GetBlocks.pb.h"
#include "Inventory.pb.h"
#include "Order.pb.h"
#include "Review.pb.h"
#include "Transaction.pb.h"
#include "Version.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Message_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_Message_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_Message_2eproto();
namespace Enze {
class PB_MessageData;
class PB_MessageDataDefaultTypeInternal;
extern PB_MessageDataDefaultTypeInternal _PB_MessageData_default_instance_;
}  // namespace Enze
namespace google {
namespace protobuf {
template<> ::Enze::PB_MessageData* Arena::CreateMaybeMessage<::Enze::PB_MessageData>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Enze {

enum PB_MessageData_Mesg_Kind {
  PB_MessageData_Mesg_Kind_MK_Version = 0,
  PB_MessageData_Mesg_Kind_MK_Addr = 1,
  PB_MessageData_Mesg_Kind_MK_Inv = 2,
  PB_MessageData_Mesg_Kind_MK_GetData = 3,
  PB_MessageData_Mesg_Kind_MK_GetBlocks = 4,
  PB_MessageData_Mesg_Kind_MK_Tx = 5,
  PB_MessageData_Mesg_Kind_MK_Review = 6,
  PB_MessageData_Mesg_Kind_MK_Block = 7,
  PB_MessageData_Mesg_Kind_MK_GetAddr = 8,
  PB_MessageData_Mesg_Kind_MK_CheckOrder = 9,
  PB_MessageData_Mesg_Kind_MK_SubmitOrder = 10,
  PB_MessageData_Mesg_Kind_MK_Reply = 11,
  PB_MessageData_Mesg_Kind_PB_MessageData_Mesg_Kind_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  PB_MessageData_Mesg_Kind_PB_MessageData_Mesg_Kind_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool PB_MessageData_Mesg_Kind_IsValid(int value);
const PB_MessageData_Mesg_Kind PB_MessageData_Mesg_Kind_Mesg_Kind_MIN = PB_MessageData_Mesg_Kind_MK_Version;
const PB_MessageData_Mesg_Kind PB_MessageData_Mesg_Kind_Mesg_Kind_MAX = PB_MessageData_Mesg_Kind_MK_Reply;
const int PB_MessageData_Mesg_Kind_Mesg_Kind_ARRAYSIZE = PB_MessageData_Mesg_Kind_Mesg_Kind_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_MessageData_Mesg_Kind_descriptor();
inline const ::std::string& PB_MessageData_Mesg_Kind_Name(PB_MessageData_Mesg_Kind value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_MessageData_Mesg_Kind_descriptor(), value);
}
inline bool PB_MessageData_Mesg_Kind_Parse(
    const ::std::string& name, PB_MessageData_Mesg_Kind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_MessageData_Mesg_Kind>(
    PB_MessageData_Mesg_Kind_descriptor(), name, value);
}
// ===================================================================

class PB_MessageData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Enze.PB_MessageData) */ {
 public:
  PB_MessageData();
  virtual ~PB_MessageData();

  PB_MessageData(const PB_MessageData& from);

  inline PB_MessageData& operator=(const PB_MessageData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PB_MessageData(PB_MessageData&& from) noexcept
    : PB_MessageData() {
    *this = ::std::move(from);
  }

  inline PB_MessageData& operator=(PB_MessageData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PB_MessageData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PB_MessageData* internal_default_instance() {
    return reinterpret_cast<const PB_MessageData*>(
               &_PB_MessageData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PB_MessageData* other);
  friend void swap(PB_MessageData& a, PB_MessageData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PB_MessageData* New() const final {
    return CreateMaybeMessage<PB_MessageData>(NULL);
  }

  PB_MessageData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PB_MessageData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PB_MessageData& from);
  void MergeFrom(const PB_MessageData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_MessageData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PB_MessageData_Mesg_Kind Mesg_Kind;
  static const Mesg_Kind MK_Version =
    PB_MessageData_Mesg_Kind_MK_Version;
  static const Mesg_Kind MK_Addr =
    PB_MessageData_Mesg_Kind_MK_Addr;
  static const Mesg_Kind MK_Inv =
    PB_MessageData_Mesg_Kind_MK_Inv;
  static const Mesg_Kind MK_GetData =
    PB_MessageData_Mesg_Kind_MK_GetData;
  static const Mesg_Kind MK_GetBlocks =
    PB_MessageData_Mesg_Kind_MK_GetBlocks;
  static const Mesg_Kind MK_Tx =
    PB_MessageData_Mesg_Kind_MK_Tx;
  static const Mesg_Kind MK_Review =
    PB_MessageData_Mesg_Kind_MK_Review;
  static const Mesg_Kind MK_Block =
    PB_MessageData_Mesg_Kind_MK_Block;
  static const Mesg_Kind MK_GetAddr =
    PB_MessageData_Mesg_Kind_MK_GetAddr;
  static const Mesg_Kind MK_CheckOrder =
    PB_MessageData_Mesg_Kind_MK_CheckOrder;
  static const Mesg_Kind MK_SubmitOrder =
    PB_MessageData_Mesg_Kind_MK_SubmitOrder;
  static const Mesg_Kind MK_Reply =
    PB_MessageData_Mesg_Kind_MK_Reply;
  static inline bool Mesg_Kind_IsValid(int value) {
    return PB_MessageData_Mesg_Kind_IsValid(value);
  }
  static const Mesg_Kind Mesg_Kind_MIN =
    PB_MessageData_Mesg_Kind_Mesg_Kind_MIN;
  static const Mesg_Kind Mesg_Kind_MAX =
    PB_MessageData_Mesg_Kind_Mesg_Kind_MAX;
  static const int Mesg_Kind_ARRAYSIZE =
    PB_MessageData_Mesg_Kind_Mesg_Kind_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Mesg_Kind_descriptor() {
    return PB_MessageData_Mesg_Kind_descriptor();
  }
  static inline const ::std::string& Mesg_Kind_Name(Mesg_Kind value) {
    return PB_MessageData_Mesg_Kind_Name(value);
  }
  static inline bool Mesg_Kind_Parse(const ::std::string& name,
      Mesg_Kind* value) {
    return PB_MessageData_Mesg_Kind_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .Enze.Address vAddr = 3;
  int vaddr_size() const;
  void clear_vaddr();
  static const int kVAddrFieldNumber = 3;
  ::Enze::Address* mutable_vaddr(int index);
  ::google::protobuf::RepeatedPtrField< ::Enze::Address >*
      mutable_vaddr();
  const ::Enze::Address& vaddr(int index) const;
  ::Enze::Address* add_vaddr();
  const ::google::protobuf::RepeatedPtrField< ::Enze::Address >&
      vaddr() const;

  // repeated .Enze.Inventory vInv = 4;
  int vinv_size() const;
  void clear_vinv();
  static const int kVInvFieldNumber = 4;
  ::Enze::Inventory* mutable_vinv(int index);
  ::google::protobuf::RepeatedPtrField< ::Enze::Inventory >*
      mutable_vinv();
  const ::Enze::Inventory& vinv(int index) const;
  ::Enze::Inventory* add_vinv();
  const ::google::protobuf::RepeatedPtrField< ::Enze::Inventory >&
      vinv() const;

  // bytes hashreply = 10;
  void clear_hashreply();
  static const int kHashreplyFieldNumber = 10;
  const ::std::string& hashreply() const;
  void set_hashreply(const ::std::string& value);
  #if LANG_CXX11
  void set_hashreply(::std::string&& value);
  #endif
  void set_hashreply(const char* value);
  void set_hashreply(const void* value, size_t size);
  ::std::string* mutable_hashreply();
  ::std::string* release_hashreply();
  void set_allocated_hashreply(::std::string* hashreply);

  // .Enze.Version cVersion = 2;
  bool has_cversion() const;
  void clear_cversion();
  static const int kCVersionFieldNumber = 2;
  const ::Enze::Version& cversion() const;
  ::Enze::Version* release_cversion();
  ::Enze::Version* mutable_cversion();
  void set_allocated_cversion(::Enze::Version* cversion);

  // .Enze.GetBlocks getBlocks = 5;
  bool has_getblocks() const;
  void clear_getblocks();
  static const int kGetBlocksFieldNumber = 5;
  const ::Enze::GetBlocks& getblocks() const;
  ::Enze::GetBlocks* release_getblocks();
  ::Enze::GetBlocks* mutable_getblocks();
  void set_allocated_getblocks(::Enze::GetBlocks* getblocks);

  // .Enze.Transaction tx = 6;
  bool has_tx() const;
  void clear_tx();
  static const int kTxFieldNumber = 6;
  const ::Enze::Transaction& tx() const;
  ::Enze::Transaction* release_tx();
  ::Enze::Transaction* mutable_tx();
  void set_allocated_tx(::Enze::Transaction* tx);

  // .Enze.Review cReview = 7;
  bool has_creview() const;
  void clear_creview();
  static const int kCReviewFieldNumber = 7;
  const ::Enze::Review& creview() const;
  ::Enze::Review* release_creview();
  ::Enze::Review* mutable_creview();
  void set_allocated_creview(::Enze::Review* creview);

  // .Enze.Order cOrder = 8;
  bool has_corder() const;
  void clear_corder();
  static const int kCOrderFieldNumber = 8;
  const ::Enze::Order& corder() const;
  ::Enze::Order* release_corder();
  ::Enze::Order* mutable_corder();
  void set_allocated_corder(::Enze::Order* corder);

  // .Enze.Block cblock = 9;
  bool has_cblock() const;
  void clear_cblock();
  static const int kCblockFieldNumber = 9;
  const ::Enze::Block& cblock() const;
  ::Enze::Block* release_cblock();
  ::Enze::Block* mutable_cblock();
  void set_allocated_cblock(::Enze::Block* cblock);

  // .Enze.PB_MessageData.Mesg_Kind eMsgKind = 1;
  void clear_emsgkind();
  static const int kEMsgKindFieldNumber = 1;
  ::Enze::PB_MessageData_Mesg_Kind emsgkind() const;
  void set_emsgkind(::Enze::PB_MessageData_Mesg_Kind value);

  // @@protoc_insertion_point(class_scope:Enze.PB_MessageData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Enze::Address > vaddr_;
  ::google::protobuf::RepeatedPtrField< ::Enze::Inventory > vinv_;
  ::google::protobuf::internal::ArenaStringPtr hashreply_;
  ::Enze::Version* cversion_;
  ::Enze::GetBlocks* getblocks_;
  ::Enze::Transaction* tx_;
  ::Enze::Review* creview_;
  ::Enze::Order* corder_;
  ::Enze::Block* cblock_;
  int emsgkind_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Message_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PB_MessageData

// .Enze.PB_MessageData.Mesg_Kind eMsgKind = 1;
inline void PB_MessageData::clear_emsgkind() {
  emsgkind_ = 0;
}
inline ::Enze::PB_MessageData_Mesg_Kind PB_MessageData::emsgkind() const {
  // @@protoc_insertion_point(field_get:Enze.PB_MessageData.eMsgKind)
  return static_cast< ::Enze::PB_MessageData_Mesg_Kind >(emsgkind_);
}
inline void PB_MessageData::set_emsgkind(::Enze::PB_MessageData_Mesg_Kind value) {
  
  emsgkind_ = value;
  // @@protoc_insertion_point(field_set:Enze.PB_MessageData.eMsgKind)
}

// .Enze.Version cVersion = 2;
inline bool PB_MessageData::has_cversion() const {
  return this != internal_default_instance() && cversion_ != NULL;
}
inline const ::Enze::Version& PB_MessageData::cversion() const {
  const ::Enze::Version* p = cversion_;
  // @@protoc_insertion_point(field_get:Enze.PB_MessageData.cVersion)
  return p != NULL ? *p : *reinterpret_cast<const ::Enze::Version*>(
      &::Enze::_Version_default_instance_);
}
inline ::Enze::Version* PB_MessageData::release_cversion() {
  // @@protoc_insertion_point(field_release:Enze.PB_MessageData.cVersion)
  
  ::Enze::Version* temp = cversion_;
  cversion_ = NULL;
  return temp;
}
inline ::Enze::Version* PB_MessageData::mutable_cversion() {
  
  if (cversion_ == NULL) {
    auto* p = CreateMaybeMessage<::Enze::Version>(GetArenaNoVirtual());
    cversion_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Enze.PB_MessageData.cVersion)
  return cversion_;
}
inline void PB_MessageData::set_allocated_cversion(::Enze::Version* cversion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cversion_);
  }
  if (cversion) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cversion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cversion, submessage_arena);
    }
    
  } else {
    
  }
  cversion_ = cversion;
  // @@protoc_insertion_point(field_set_allocated:Enze.PB_MessageData.cVersion)
}

// repeated .Enze.Address vAddr = 3;
inline int PB_MessageData::vaddr_size() const {
  return vaddr_.size();
}
inline ::Enze::Address* PB_MessageData::mutable_vaddr(int index) {
  // @@protoc_insertion_point(field_mutable:Enze.PB_MessageData.vAddr)
  return vaddr_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Enze::Address >*
PB_MessageData::mutable_vaddr() {
  // @@protoc_insertion_point(field_mutable_list:Enze.PB_MessageData.vAddr)
  return &vaddr_;
}
inline const ::Enze::Address& PB_MessageData::vaddr(int index) const {
  // @@protoc_insertion_point(field_get:Enze.PB_MessageData.vAddr)
  return vaddr_.Get(index);
}
inline ::Enze::Address* PB_MessageData::add_vaddr() {
  // @@protoc_insertion_point(field_add:Enze.PB_MessageData.vAddr)
  return vaddr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Enze::Address >&
PB_MessageData::vaddr() const {
  // @@protoc_insertion_point(field_list:Enze.PB_MessageData.vAddr)
  return vaddr_;
}

// repeated .Enze.Inventory vInv = 4;
inline int PB_MessageData::vinv_size() const {
  return vinv_.size();
}
inline ::Enze::Inventory* PB_MessageData::mutable_vinv(int index) {
  // @@protoc_insertion_point(field_mutable:Enze.PB_MessageData.vInv)
  return vinv_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Enze::Inventory >*
PB_MessageData::mutable_vinv() {
  // @@protoc_insertion_point(field_mutable_list:Enze.PB_MessageData.vInv)
  return &vinv_;
}
inline const ::Enze::Inventory& PB_MessageData::vinv(int index) const {
  // @@protoc_insertion_point(field_get:Enze.PB_MessageData.vInv)
  return vinv_.Get(index);
}
inline ::Enze::Inventory* PB_MessageData::add_vinv() {
  // @@protoc_insertion_point(field_add:Enze.PB_MessageData.vInv)
  return vinv_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Enze::Inventory >&
PB_MessageData::vinv() const {
  // @@protoc_insertion_point(field_list:Enze.PB_MessageData.vInv)
  return vinv_;
}

// .Enze.GetBlocks getBlocks = 5;
inline bool PB_MessageData::has_getblocks() const {
  return this != internal_default_instance() && getblocks_ != NULL;
}
inline const ::Enze::GetBlocks& PB_MessageData::getblocks() const {
  const ::Enze::GetBlocks* p = getblocks_;
  // @@protoc_insertion_point(field_get:Enze.PB_MessageData.getBlocks)
  return p != NULL ? *p : *reinterpret_cast<const ::Enze::GetBlocks*>(
      &::Enze::_GetBlocks_default_instance_);
}
inline ::Enze::GetBlocks* PB_MessageData::release_getblocks() {
  // @@protoc_insertion_point(field_release:Enze.PB_MessageData.getBlocks)
  
  ::Enze::GetBlocks* temp = getblocks_;
  getblocks_ = NULL;
  return temp;
}
inline ::Enze::GetBlocks* PB_MessageData::mutable_getblocks() {
  
  if (getblocks_ == NULL) {
    auto* p = CreateMaybeMessage<::Enze::GetBlocks>(GetArenaNoVirtual());
    getblocks_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Enze.PB_MessageData.getBlocks)
  return getblocks_;
}
inline void PB_MessageData::set_allocated_getblocks(::Enze::GetBlocks* getblocks) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(getblocks_);
  }
  if (getblocks) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getblocks = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getblocks, submessage_arena);
    }
    
  } else {
    
  }
  getblocks_ = getblocks;
  // @@protoc_insertion_point(field_set_allocated:Enze.PB_MessageData.getBlocks)
}

// .Enze.Transaction tx = 6;
inline bool PB_MessageData::has_tx() const {
  return this != internal_default_instance() && tx_ != NULL;
}
inline const ::Enze::Transaction& PB_MessageData::tx() const {
  const ::Enze::Transaction* p = tx_;
  // @@protoc_insertion_point(field_get:Enze.PB_MessageData.tx)
  return p != NULL ? *p : *reinterpret_cast<const ::Enze::Transaction*>(
      &::Enze::_Transaction_default_instance_);
}
inline ::Enze::Transaction* PB_MessageData::release_tx() {
  // @@protoc_insertion_point(field_release:Enze.PB_MessageData.tx)
  
  ::Enze::Transaction* temp = tx_;
  tx_ = NULL;
  return temp;
}
inline ::Enze::Transaction* PB_MessageData::mutable_tx() {
  
  if (tx_ == NULL) {
    auto* p = CreateMaybeMessage<::Enze::Transaction>(GetArenaNoVirtual());
    tx_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Enze.PB_MessageData.tx)
  return tx_;
}
inline void PB_MessageData::set_allocated_tx(::Enze::Transaction* tx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_);
  }
  if (tx) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx, submessage_arena);
    }
    
  } else {
    
  }
  tx_ = tx;
  // @@protoc_insertion_point(field_set_allocated:Enze.PB_MessageData.tx)
}

// .Enze.Review cReview = 7;
inline bool PB_MessageData::has_creview() const {
  return this != internal_default_instance() && creview_ != NULL;
}
inline const ::Enze::Review& PB_MessageData::creview() const {
  const ::Enze::Review* p = creview_;
  // @@protoc_insertion_point(field_get:Enze.PB_MessageData.cReview)
  return p != NULL ? *p : *reinterpret_cast<const ::Enze::Review*>(
      &::Enze::_Review_default_instance_);
}
inline ::Enze::Review* PB_MessageData::release_creview() {
  // @@protoc_insertion_point(field_release:Enze.PB_MessageData.cReview)
  
  ::Enze::Review* temp = creview_;
  creview_ = NULL;
  return temp;
}
inline ::Enze::Review* PB_MessageData::mutable_creview() {
  
  if (creview_ == NULL) {
    auto* p = CreateMaybeMessage<::Enze::Review>(GetArenaNoVirtual());
    creview_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Enze.PB_MessageData.cReview)
  return creview_;
}
inline void PB_MessageData::set_allocated_creview(::Enze::Review* creview) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(creview_);
  }
  if (creview) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      creview = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, creview, submessage_arena);
    }
    
  } else {
    
  }
  creview_ = creview;
  // @@protoc_insertion_point(field_set_allocated:Enze.PB_MessageData.cReview)
}

// .Enze.Order cOrder = 8;
inline bool PB_MessageData::has_corder() const {
  return this != internal_default_instance() && corder_ != NULL;
}
inline const ::Enze::Order& PB_MessageData::corder() const {
  const ::Enze::Order* p = corder_;
  // @@protoc_insertion_point(field_get:Enze.PB_MessageData.cOrder)
  return p != NULL ? *p : *reinterpret_cast<const ::Enze::Order*>(
      &::Enze::_Order_default_instance_);
}
inline ::Enze::Order* PB_MessageData::release_corder() {
  // @@protoc_insertion_point(field_release:Enze.PB_MessageData.cOrder)
  
  ::Enze::Order* temp = corder_;
  corder_ = NULL;
  return temp;
}
inline ::Enze::Order* PB_MessageData::mutable_corder() {
  
  if (corder_ == NULL) {
    auto* p = CreateMaybeMessage<::Enze::Order>(GetArenaNoVirtual());
    corder_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Enze.PB_MessageData.cOrder)
  return corder_;
}
inline void PB_MessageData::set_allocated_corder(::Enze::Order* corder) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(corder_);
  }
  if (corder) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      corder = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, corder, submessage_arena);
    }
    
  } else {
    
  }
  corder_ = corder;
  // @@protoc_insertion_point(field_set_allocated:Enze.PB_MessageData.cOrder)
}

// .Enze.Block cblock = 9;
inline bool PB_MessageData::has_cblock() const {
  return this != internal_default_instance() && cblock_ != NULL;
}
inline const ::Enze::Block& PB_MessageData::cblock() const {
  const ::Enze::Block* p = cblock_;
  // @@protoc_insertion_point(field_get:Enze.PB_MessageData.cblock)
  return p != NULL ? *p : *reinterpret_cast<const ::Enze::Block*>(
      &::Enze::_Block_default_instance_);
}
inline ::Enze::Block* PB_MessageData::release_cblock() {
  // @@protoc_insertion_point(field_release:Enze.PB_MessageData.cblock)
  
  ::Enze::Block* temp = cblock_;
  cblock_ = NULL;
  return temp;
}
inline ::Enze::Block* PB_MessageData::mutable_cblock() {
  
  if (cblock_ == NULL) {
    auto* p = CreateMaybeMessage<::Enze::Block>(GetArenaNoVirtual());
    cblock_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Enze.PB_MessageData.cblock)
  return cblock_;
}
inline void PB_MessageData::set_allocated_cblock(::Enze::Block* cblock) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cblock_);
  }
  if (cblock) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cblock = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cblock, submessage_arena);
    }
    
  } else {
    
  }
  cblock_ = cblock;
  // @@protoc_insertion_point(field_set_allocated:Enze.PB_MessageData.cblock)
}

// bytes hashreply = 10;
inline void PB_MessageData::clear_hashreply() {
  hashreply_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PB_MessageData::hashreply() const {
  // @@protoc_insertion_point(field_get:Enze.PB_MessageData.hashreply)
  return hashreply_.GetNoArena();
}
inline void PB_MessageData::set_hashreply(const ::std::string& value) {
  
  hashreply_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Enze.PB_MessageData.hashreply)
}
#if LANG_CXX11
inline void PB_MessageData::set_hashreply(::std::string&& value) {
  
  hashreply_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Enze.PB_MessageData.hashreply)
}
#endif
inline void PB_MessageData::set_hashreply(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hashreply_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Enze.PB_MessageData.hashreply)
}
inline void PB_MessageData::set_hashreply(const void* value, size_t size) {
  
  hashreply_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Enze.PB_MessageData.hashreply)
}
inline ::std::string* PB_MessageData::mutable_hashreply() {
  
  // @@protoc_insertion_point(field_mutable:Enze.PB_MessageData.hashreply)
  return hashreply_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PB_MessageData::release_hashreply() {
  // @@protoc_insertion_point(field_release:Enze.PB_MessageData.hashreply)
  
  return hashreply_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PB_MessageData::set_allocated_hashreply(::std::string* hashreply) {
  if (hashreply != NULL) {
    
  } else {
    
  }
  hashreply_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashreply);
  // @@protoc_insertion_point(field_set_allocated:Enze.PB_MessageData.hashreply)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Enze

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Enze::PB_MessageData_Mesg_Kind> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Enze::PB_MessageData_Mesg_Kind>() {
  return ::Enze::PB_MessageData_Mesg_Kind_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_Message_2eproto
