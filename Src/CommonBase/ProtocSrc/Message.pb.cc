// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#include "Message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_Address_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Address_Address_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Block_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Block_Block_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GetBlocks_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GetBlocks_GetBlocks_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Inventory_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Inventory_Inventory_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Order_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Order_Order_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Review_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Review_Review_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Transaction_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Transaction_Transaction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Version_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Version_Version_2eproto;
namespace Enze {
class PB_MessageDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PB_MessageData> _instance;
} _PB_MessageData_default_instance_;
}  // namespace Enze
static void InitDefaultsPB_MessageData_Message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Enze::_PB_MessageData_default_instance_;
    new (ptr) ::Enze::PB_MessageData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Enze::PB_MessageData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_PB_MessageData_Message_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsPB_MessageData_Message_2eproto}, {
      &scc_info_Version_Version_2eproto.base,
      &scc_info_Address_Address_2eproto.base,
      &scc_info_Inventory_Inventory_2eproto.base,
      &scc_info_GetBlocks_GetBlocks_2eproto.base,
      &scc_info_Transaction_Transaction_2eproto.base,
      &scc_info_Review_Review_2eproto.base,
      &scc_info_Order_Order_2eproto.base,
      &scc_info_Block_Block_2eproto.base,}};

void InitDefaults_Message_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_PB_MessageData_Message_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_Message_2eproto[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_Message_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_Message_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_Message_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Enze::PB_MessageData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Enze::PB_MessageData, emsgkind_),
  PROTOBUF_FIELD_OFFSET(::Enze::PB_MessageData, cversion_),
  PROTOBUF_FIELD_OFFSET(::Enze::PB_MessageData, vaddr_),
  PROTOBUF_FIELD_OFFSET(::Enze::PB_MessageData, vinv_),
  PROTOBUF_FIELD_OFFSET(::Enze::PB_MessageData, getblocks_),
  PROTOBUF_FIELD_OFFSET(::Enze::PB_MessageData, tx_),
  PROTOBUF_FIELD_OFFSET(::Enze::PB_MessageData, creview_),
  PROTOBUF_FIELD_OFFSET(::Enze::PB_MessageData, corder_),
  PROTOBUF_FIELD_OFFSET(::Enze::PB_MessageData, cblock_),
  PROTOBUF_FIELD_OFFSET(::Enze::PB_MessageData, hashreply_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Enze::PB_MessageData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Enze::_PB_MessageData_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_Message_2eproto = {
  {}, AddDescriptors_Message_2eproto, "Message.proto", schemas,
  file_default_instances, TableStruct_Message_2eproto::offsets,
  file_level_metadata_Message_2eproto, 1, file_level_enum_descriptors_Message_2eproto, file_level_service_descriptors_Message_2eproto,
};

::google::protobuf::internal::DescriptorTable descriptor_table_Message_2eproto = {
  false, InitDefaults_Message_2eproto, 
  "\n\rMessage.proto\022\004Enze\032\rAddress.proto\032\013Bl"
  "ock.proto\032\017GetBlocks.proto\032\017Inventory.pr"
  "oto\032\013Order.proto\032\014Review.proto\032\021Transact"
  "ion.proto\032\rVersion.proto\"\225\004\n\016PB_MessageD"
  "ata\0220\n\010eMsgKind\030\001 \001(\0162\036.Enze.PB_MessageD"
  "ata.Mesg_Kind\022\037\n\010cVersion\030\002 \001(\0132\r.Enze.V"
  "ersion\022\034\n\005vAddr\030\003 \003(\0132\r.Enze.Address\022\035\n\004"
  "vInv\030\004 \003(\0132\017.Enze.Inventory\022\"\n\tgetBlocks"
  "\030\005 \001(\0132\017.Enze.GetBlocks\022\035\n\002tx\030\006 \001(\0132\021.En"
  "ze.Transaction\022\035\n\007cReview\030\007 \001(\0132\014.Enze.R"
  "eview\022\033\n\006cOrder\030\010 \001(\0132\013.Enze.Order\022\033\n\006cb"
  "lock\030\t \001(\0132\013.Enze.Block\022\021\n\thashreply\030\n \001"
  "(\t\"\303\001\n\tMesg_Kind\022\016\n\nMK_Version\020\000\022\013\n\007MK_A"
  "ddr\020\001\022\n\n\006MK_Inv\020\002\022\016\n\nMK_GetData\020\003\022\020\n\014MK_"
  "GetBlocks\020\004\022\t\n\005MK_Tx\020\005\022\r\n\tMK_Review\020\006\022\014\n"
  "\010MK_Block\020\007\022\016\n\nMK_GetAddr\020\010\022\021\n\rMK_CheckO"
  "rder\020\t\022\022\n\016MK_SubmitOrder\020\n\022\014\n\010MK_Reply\020\013"
  "b\006proto3"
,
  "Message.proto", &assign_descriptors_table_Message_2eproto, 688,
};

void AddDescriptors_Message_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[8] =
  {
    ::AddDescriptors_Address_2eproto,
    ::AddDescriptors_Block_2eproto,
    ::AddDescriptors_GetBlocks_2eproto,
    ::AddDescriptors_Inventory_2eproto,
    ::AddDescriptors_Order_2eproto,
    ::AddDescriptors_Review_2eproto,
    ::AddDescriptors_Transaction_2eproto,
    ::AddDescriptors_Version_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_Message_2eproto, deps, 8);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Message_2eproto = []() { AddDescriptors_Message_2eproto(); return true; }();
namespace Enze {
const ::google::protobuf::EnumDescriptor* PB_MessageData_Mesg_Kind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_Message_2eproto);
  return file_level_enum_descriptors_Message_2eproto[0];
}
bool PB_MessageData_Mesg_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PB_MessageData_Mesg_Kind PB_MessageData::MK_Version;
const PB_MessageData_Mesg_Kind PB_MessageData::MK_Addr;
const PB_MessageData_Mesg_Kind PB_MessageData::MK_Inv;
const PB_MessageData_Mesg_Kind PB_MessageData::MK_GetData;
const PB_MessageData_Mesg_Kind PB_MessageData::MK_GetBlocks;
const PB_MessageData_Mesg_Kind PB_MessageData::MK_Tx;
const PB_MessageData_Mesg_Kind PB_MessageData::MK_Review;
const PB_MessageData_Mesg_Kind PB_MessageData::MK_Block;
const PB_MessageData_Mesg_Kind PB_MessageData::MK_GetAddr;
const PB_MessageData_Mesg_Kind PB_MessageData::MK_CheckOrder;
const PB_MessageData_Mesg_Kind PB_MessageData::MK_SubmitOrder;
const PB_MessageData_Mesg_Kind PB_MessageData::MK_Reply;
const PB_MessageData_Mesg_Kind PB_MessageData::Mesg_Kind_MIN;
const PB_MessageData_Mesg_Kind PB_MessageData::Mesg_Kind_MAX;
const int PB_MessageData::Mesg_Kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void PB_MessageData::InitAsDefaultInstance() {
  ::Enze::_PB_MessageData_default_instance_._instance.get_mutable()->cversion_ = const_cast< ::Enze::Version*>(
      ::Enze::Version::internal_default_instance());
  ::Enze::_PB_MessageData_default_instance_._instance.get_mutable()->getblocks_ = const_cast< ::Enze::GetBlocks*>(
      ::Enze::GetBlocks::internal_default_instance());
  ::Enze::_PB_MessageData_default_instance_._instance.get_mutable()->tx_ = const_cast< ::Enze::Transaction*>(
      ::Enze::Transaction::internal_default_instance());
  ::Enze::_PB_MessageData_default_instance_._instance.get_mutable()->creview_ = const_cast< ::Enze::Review*>(
      ::Enze::Review::internal_default_instance());
  ::Enze::_PB_MessageData_default_instance_._instance.get_mutable()->corder_ = const_cast< ::Enze::Order*>(
      ::Enze::Order::internal_default_instance());
  ::Enze::_PB_MessageData_default_instance_._instance.get_mutable()->cblock_ = const_cast< ::Enze::Block*>(
      ::Enze::Block::internal_default_instance());
}
class PB_MessageData::HasBitSetters {
 public:
  static const ::Enze::Version& cversion(const PB_MessageData* msg);
  static const ::Enze::GetBlocks& getblocks(const PB_MessageData* msg);
  static const ::Enze::Transaction& tx(const PB_MessageData* msg);
  static const ::Enze::Review& creview(const PB_MessageData* msg);
  static const ::Enze::Order& corder(const PB_MessageData* msg);
  static const ::Enze::Block& cblock(const PB_MessageData* msg);
};

const ::Enze::Version&
PB_MessageData::HasBitSetters::cversion(const PB_MessageData* msg) {
  return *msg->cversion_;
}
const ::Enze::GetBlocks&
PB_MessageData::HasBitSetters::getblocks(const PB_MessageData* msg) {
  return *msg->getblocks_;
}
const ::Enze::Transaction&
PB_MessageData::HasBitSetters::tx(const PB_MessageData* msg) {
  return *msg->tx_;
}
const ::Enze::Review&
PB_MessageData::HasBitSetters::creview(const PB_MessageData* msg) {
  return *msg->creview_;
}
const ::Enze::Order&
PB_MessageData::HasBitSetters::corder(const PB_MessageData* msg) {
  return *msg->corder_;
}
const ::Enze::Block&
PB_MessageData::HasBitSetters::cblock(const PB_MessageData* msg) {
  return *msg->cblock_;
}
void PB_MessageData::clear_cversion() {
  if (GetArenaNoVirtual() == NULL && cversion_ != NULL) {
    delete cversion_;
  }
  cversion_ = NULL;
}
void PB_MessageData::clear_vaddr() {
  vaddr_.Clear();
}
void PB_MessageData::clear_vinv() {
  vinv_.Clear();
}
void PB_MessageData::clear_getblocks() {
  if (GetArenaNoVirtual() == NULL && getblocks_ != NULL) {
    delete getblocks_;
  }
  getblocks_ = NULL;
}
void PB_MessageData::clear_tx() {
  if (GetArenaNoVirtual() == NULL && tx_ != NULL) {
    delete tx_;
  }
  tx_ = NULL;
}
void PB_MessageData::clear_creview() {
  if (GetArenaNoVirtual() == NULL && creview_ != NULL) {
    delete creview_;
  }
  creview_ = NULL;
}
void PB_MessageData::clear_corder() {
  if (GetArenaNoVirtual() == NULL && corder_ != NULL) {
    delete corder_;
  }
  corder_ = NULL;
}
void PB_MessageData::clear_cblock() {
  if (GetArenaNoVirtual() == NULL && cblock_ != NULL) {
    delete cblock_;
  }
  cblock_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PB_MessageData::kEMsgKindFieldNumber;
const int PB_MessageData::kCVersionFieldNumber;
const int PB_MessageData::kVAddrFieldNumber;
const int PB_MessageData::kVInvFieldNumber;
const int PB_MessageData::kGetBlocksFieldNumber;
const int PB_MessageData::kTxFieldNumber;
const int PB_MessageData::kCReviewFieldNumber;
const int PB_MessageData::kCOrderFieldNumber;
const int PB_MessageData::kCblockFieldNumber;
const int PB_MessageData::kHashreplyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PB_MessageData::PB_MessageData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Enze.PB_MessageData)
}
PB_MessageData::PB_MessageData(const PB_MessageData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vaddr_(from.vaddr_),
      vinv_(from.vinv_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hashreply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hashreply().size() > 0) {
    hashreply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashreply_);
  }
  if (from.has_cversion()) {
    cversion_ = new ::Enze::Version(*from.cversion_);
  } else {
    cversion_ = NULL;
  }
  if (from.has_getblocks()) {
    getblocks_ = new ::Enze::GetBlocks(*from.getblocks_);
  } else {
    getblocks_ = NULL;
  }
  if (from.has_tx()) {
    tx_ = new ::Enze::Transaction(*from.tx_);
  } else {
    tx_ = NULL;
  }
  if (from.has_creview()) {
    creview_ = new ::Enze::Review(*from.creview_);
  } else {
    creview_ = NULL;
  }
  if (from.has_corder()) {
    corder_ = new ::Enze::Order(*from.corder_);
  } else {
    corder_ = NULL;
  }
  if (from.has_cblock()) {
    cblock_ = new ::Enze::Block(*from.cblock_);
  } else {
    cblock_ = NULL;
  }
  emsgkind_ = from.emsgkind_;
  // @@protoc_insertion_point(copy_constructor:Enze.PB_MessageData)
}

void PB_MessageData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PB_MessageData_Message_2eproto.base);
  hashreply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cversion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&emsgkind_) -
      reinterpret_cast<char*>(&cversion_)) + sizeof(emsgkind_));
}

PB_MessageData::~PB_MessageData() {
  // @@protoc_insertion_point(destructor:Enze.PB_MessageData)
  SharedDtor();
}

void PB_MessageData::SharedDtor() {
  hashreply_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cversion_;
  if (this != internal_default_instance()) delete getblocks_;
  if (this != internal_default_instance()) delete tx_;
  if (this != internal_default_instance()) delete creview_;
  if (this != internal_default_instance()) delete corder_;
  if (this != internal_default_instance()) delete cblock_;
}

void PB_MessageData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PB_MessageData& PB_MessageData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PB_MessageData_Message_2eproto.base);
  return *internal_default_instance();
}


void PB_MessageData::Clear() {
// @@protoc_insertion_point(message_clear_start:Enze.PB_MessageData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vaddr_.Clear();
  vinv_.Clear();
  hashreply_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && cversion_ != NULL) {
    delete cversion_;
  }
  cversion_ = NULL;
  if (GetArenaNoVirtual() == NULL && getblocks_ != NULL) {
    delete getblocks_;
  }
  getblocks_ = NULL;
  if (GetArenaNoVirtual() == NULL && tx_ != NULL) {
    delete tx_;
  }
  tx_ = NULL;
  if (GetArenaNoVirtual() == NULL && creview_ != NULL) {
    delete creview_;
  }
  creview_ = NULL;
  if (GetArenaNoVirtual() == NULL && corder_ != NULL) {
    delete corder_;
  }
  corder_ = NULL;
  if (GetArenaNoVirtual() == NULL && cblock_ != NULL) {
    delete cblock_;
  }
  cblock_ = NULL;
  emsgkind_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PB_MessageData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PB_MessageData*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .Enze.PB_MessageData.Mesg_Kind eMsgKind = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::Enze::PB_MessageData_Mesg_Kind value = static_cast<::Enze::PB_MessageData_Mesg_Kind>(val);
        msg->set_emsgkind(value);
        break;
      }
      // .Enze.Version cVersion = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Enze::Version::_InternalParse;
        object = msg->mutable_cversion();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      // repeated .Enze.Address vAddr = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::Enze::Address::_InternalParse;
          object = msg->add_vaddr();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          bool ok = ctx->ParseExactRange({parser_till_end, object},
                                         ptr, newend);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated .Enze.Inventory vInv = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::Enze::Inventory::_InternalParse;
          object = msg->add_vinv();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          bool ok = ctx->ParseExactRange({parser_till_end, object},
                                         ptr, newend);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // .Enze.GetBlocks getBlocks = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Enze::GetBlocks::_InternalParse;
        object = msg->mutable_getblocks();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      // .Enze.Transaction tx = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Enze::Transaction::_InternalParse;
        object = msg->mutable_tx();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      // .Enze.Review cReview = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Enze::Review::_InternalParse;
        object = msg->mutable_creview();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      // .Enze.Order cOrder = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Enze::Order::_InternalParse;
        object = msg->mutable_corder();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      // .Enze.Block cblock = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Enze::Block::_InternalParse;
        object = msg->mutable_cblock();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      // string hashreply = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Enze.PB_MessageData.hashreply");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8;
        ::std::string* str = msg->mutable_hashreply();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          bool ok = ctx->ValidEndGroup(tag);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PB_MessageData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Enze.PB_MessageData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Enze.PB_MessageData.Mesg_Kind eMsgKind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_emsgkind(static_cast< ::Enze::PB_MessageData_Mesg_Kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Enze.Version cVersion = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cversion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Enze.Address vAddr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vaddr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Enze.Inventory vInv = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vinv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Enze.GetBlocks getBlocks = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getblocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Enze.Transaction tx = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Enze.Review cReview = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_creview()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Enze.Order cOrder = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_corder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Enze.Block cblock = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cblock()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hashreply = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashreply()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hashreply().data(), static_cast<int>(this->hashreply().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Enze.PB_MessageData.hashreply"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Enze.PB_MessageData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Enze.PB_MessageData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PB_MessageData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Enze.PB_MessageData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Enze.PB_MessageData.Mesg_Kind eMsgKind = 1;
  if (this->emsgkind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->emsgkind(), output);
  }

  // .Enze.Version cVersion = 2;
  if (this->has_cversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::cversion(this), output);
  }

  // repeated .Enze.Address vAddr = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vaddr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->vaddr(static_cast<int>(i)),
      output);
  }

  // repeated .Enze.Inventory vInv = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vinv_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->vinv(static_cast<int>(i)),
      output);
  }

  // .Enze.GetBlocks getBlocks = 5;
  if (this->has_getblocks()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::getblocks(this), output);
  }

  // .Enze.Transaction tx = 6;
  if (this->has_tx()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::tx(this), output);
  }

  // .Enze.Review cReview = 7;
  if (this->has_creview()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::creview(this), output);
  }

  // .Enze.Order cOrder = 8;
  if (this->has_corder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::corder(this), output);
  }

  // .Enze.Block cblock = 9;
  if (this->has_cblock()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::cblock(this), output);
  }

  // string hashreply = 10;
  if (this->hashreply().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashreply().data(), static_cast<int>(this->hashreply().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Enze.PB_MessageData.hashreply");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->hashreply(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Enze.PB_MessageData)
}

::google::protobuf::uint8* PB_MessageData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Enze.PB_MessageData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Enze.PB_MessageData.Mesg_Kind eMsgKind = 1;
  if (this->emsgkind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->emsgkind(), target);
  }

  // .Enze.Version cVersion = 2;
  if (this->has_cversion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::cversion(this), deterministic, target);
  }

  // repeated .Enze.Address vAddr = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vaddr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->vaddr(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Enze.Inventory vInv = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vinv_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->vinv(static_cast<int>(i)), deterministic, target);
  }

  // .Enze.GetBlocks getBlocks = 5;
  if (this->has_getblocks()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::getblocks(this), deterministic, target);
  }

  // .Enze.Transaction tx = 6;
  if (this->has_tx()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::tx(this), deterministic, target);
  }

  // .Enze.Review cReview = 7;
  if (this->has_creview()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::creview(this), deterministic, target);
  }

  // .Enze.Order cOrder = 8;
  if (this->has_corder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::corder(this), deterministic, target);
  }

  // .Enze.Block cblock = 9;
  if (this->has_cblock()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::cblock(this), deterministic, target);
  }

  // string hashreply = 10;
  if (this->hashreply().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hashreply().data(), static_cast<int>(this->hashreply().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Enze.PB_MessageData.hashreply");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->hashreply(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Enze.PB_MessageData)
  return target;
}

size_t PB_MessageData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Enze.PB_MessageData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Enze.Address vAddr = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->vaddr_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vaddr(static_cast<int>(i)));
    }
  }

  // repeated .Enze.Inventory vInv = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->vinv_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vinv(static_cast<int>(i)));
    }
  }

  // string hashreply = 10;
  if (this->hashreply().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hashreply());
  }

  // .Enze.Version cVersion = 2;
  if (this->has_cversion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cversion_);
  }

  // .Enze.GetBlocks getBlocks = 5;
  if (this->has_getblocks()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *getblocks_);
  }

  // .Enze.Transaction tx = 6;
  if (this->has_tx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tx_);
  }

  // .Enze.Review cReview = 7;
  if (this->has_creview()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *creview_);
  }

  // .Enze.Order cOrder = 8;
  if (this->has_corder()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *corder_);
  }

  // .Enze.Block cblock = 9;
  if (this->has_cblock()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cblock_);
  }

  // .Enze.PB_MessageData.Mesg_Kind eMsgKind = 1;
  if (this->emsgkind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->emsgkind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PB_MessageData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Enze.PB_MessageData)
  GOOGLE_DCHECK_NE(&from, this);
  const PB_MessageData* source =
      ::google::protobuf::DynamicCastToGenerated<PB_MessageData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Enze.PB_MessageData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Enze.PB_MessageData)
    MergeFrom(*source);
  }
}

void PB_MessageData::MergeFrom(const PB_MessageData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Enze.PB_MessageData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vaddr_.MergeFrom(from.vaddr_);
  vinv_.MergeFrom(from.vinv_);
  if (from.hashreply().size() > 0) {

    hashreply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashreply_);
  }
  if (from.has_cversion()) {
    mutable_cversion()->::Enze::Version::MergeFrom(from.cversion());
  }
  if (from.has_getblocks()) {
    mutable_getblocks()->::Enze::GetBlocks::MergeFrom(from.getblocks());
  }
  if (from.has_tx()) {
    mutable_tx()->::Enze::Transaction::MergeFrom(from.tx());
  }
  if (from.has_creview()) {
    mutable_creview()->::Enze::Review::MergeFrom(from.creview());
  }
  if (from.has_corder()) {
    mutable_corder()->::Enze::Order::MergeFrom(from.corder());
  }
  if (from.has_cblock()) {
    mutable_cblock()->::Enze::Block::MergeFrom(from.cblock());
  }
  if (from.emsgkind() != 0) {
    set_emsgkind(from.emsgkind());
  }
}

void PB_MessageData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Enze.PB_MessageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_MessageData::CopyFrom(const PB_MessageData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Enze.PB_MessageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_MessageData::IsInitialized() const {
  return true;
}

void PB_MessageData::Swap(PB_MessageData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PB_MessageData::InternalSwap(PB_MessageData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&vaddr_)->InternalSwap(CastToBase(&other->vaddr_));
  CastToBase(&vinv_)->InternalSwap(CastToBase(&other->vinv_));
  hashreply_.Swap(&other->hashreply_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cversion_, other->cversion_);
  swap(getblocks_, other->getblocks_);
  swap(tx_, other->tx_);
  swap(creview_, other->creview_);
  swap(corder_, other->corder_);
  swap(cblock_, other->cblock_);
  swap(emsgkind_, other->emsgkind_);
}

::google::protobuf::Metadata PB_MessageData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Message_2eproto);
  return ::file_level_metadata_Message_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Enze
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::Enze::PB_MessageData* Arena::CreateMaybeMessage< ::Enze::PB_MessageData >(Arena* arena) {
  return Arena::CreateInternal< ::Enze::PB_MessageData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
